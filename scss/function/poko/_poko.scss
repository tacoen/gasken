@mixin link-color($color:#000) {
	transition: all .25s linear;
	color: var(--txt, $color);
	border-bottom: none;
	&:hover { color: var(--hover, darken($color,15%));border-bottom: none; }
	&:active { color: var(--active, lighten($color,15%)); border-bottom: none;}
	
}

@function link-color-calc($color) {
	@if (lightness($color)<50%) { 
		$link_color: hsl( hue($color)+200deg , 50%, 75%);
	} @else {
		$link_color: hsl( hue($color)+200deg , 50%, 25%);
	}
	@return $link-color;
}

@function isnt-same($var1, $var2: false ) {
	@if $var1 == $var2 { 
		@return false; 
	} @else {
		@return true
	}
}  

@function not-empty($var) {
	@if ($var=='false') { @return false; }	
	@else if ($var=='0') { @return false; }	
	@else if ($var=='') { @return false; }	
	@else if ($var=='null') { @return false; }	
	@else if ($var==false) { @return false; } 
	@else if ($var==null) { @return false; }
	@return true;
}

@function if-is-empty($var,$default) {
	@if ($var=='false') { @return $default; }	
	@else if ($var=='0') { @return $default; }	
	@else if ($var=='') { @return $default; }	
	@else if ($var=='null') { @return $default; }	
	@else if ($var==false) { @return $default; } 
	@else if ($var==null) { @return $default; }
	@return $var;
}


@function maxlighten($color, $target: 90) {
	@return lighten($color,floor($target - lightness($color)));
}

@function maxdarken($color, $target: 10) {
	@return darken($color,floor(lightness($color)-$target));
}

@function textcolor-maxtint($color) {
 	@if (lightness($color) > 50) {
 		@return maxdarken($color);
	} @else {
    	@return maxlighten($color);
  	}	
}
	



@mixin hsl-bg-init($color) {

	--color: $color;
	--h: round(hue($color)/1deg);
	--s: round(saturation($color));
	--l: round(lightness($color));
}

@mixin hsl-bg-parse($color) {

	@include hsl-bg-init($color);
	
	@if (lightness($color) > 50) {
		--txt: var(--b1, maxdarken($color));
	} @else {
		--txt: var(--w1, maxlighten($color));
	}
	
	--bg: unquote("hsl(var(--h),var(--s),var(--l))");

}
