.modular-row {
	color: var(--text);
	background-color: var(--bg);
	font-family: var(--font);	
	padding: 6rem 4rem;
	text-align: center;
	h1,h2,h3,h4,h5,h6 { color: var(--text); }
	a:not(.button) { color: var(--text); }
	@include nofirstchild();
	font-size: 1.2rem;
	p { margin-bottom: 1.5rem; }
	p:last-child { margin-bottom: 0 }
}


// sections base

@each $name, $set in $sections {

	$prefix: ".section-";
	$suffix: "";
	$naming: #{$prefix}#{$name}#{$suffix};

	$mn:'';
	
	@if map-get($set,'modular') {
		$m: ', .modular .';
		$mn: #{$m}#{$name}; 
	}	

	$naming: #{$prefix}#{$name}#{$suffix}#{$mn};
	
	#{$naming} {
	
		$bg: map-get($set,'bg');
		$txt: map-get($set,'txt');
		$img: map-get($set,'img');
		$font: map-get($set,'font');
		
		@if img == '' { $img: false; }
		
		@if isnt-same($font, $base-font) {	--font: get-font-family($font); }
		@if isnt-same($bg, $base-background) {	--bg: $bg; }
		@if isnt-same($txt, $base-text-color) { --text: $txt; }
	
		@if $img {
			--bg: maxdarken($bg,30);
			--text: maxlighten($bg,95);		
			background-image: url($img);
			@extend %box-cover;
		}
		

		background-color: var(--bg);
		
		h1,h2,h3,h4,h5,h6 { 
			color: var(--text);
			border:none;
		}
		
		@if map-get($set,'generic') {
			--name: quote($name); 
		}

		@if map-get($set,'navigation') {
		
			--active-text: $txt;
			--hover-text: $txt;
			--active-bg: maxlighten($bg,70);
			--hover-bg: adjust-hue($bg, -8deg); 
			--touch-bg: adjust-hue($bg, -8deg); 
			--touch-border: maxlighten($bg,70);
		}
	
	}
			
}

#g-navigation a,
#g-footer a,
#g-header a {
	color: var(--text);
	&:active {
		color: var(--text);
	}
	
}
